name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: self-hosted

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # CI 전용 설정 파일 생성
      - name: Set up application-ci.yml for CI environment
        run: |
          mkdir -p src/main/resources
          cat <<EOF > src/main/resources/application-ci.yml
          spring:
            datasource:
              url: jdbc:h2:mem:cidb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
              driver-class-name: org.h2.Driver
              username: sa
              password: 
            jpa:
              hibernate:
                ddl-auto: create-drop
              show-sql: false
              properties:
                hibernate:
                  format_sql: false
                  dialect: org.hibernate.dialect.H2Dialect
          
          jwt:
            secret: ${{ secrets.JWT_SECRET }}
          
          logging:
            level:
              org.springframework: WARN
              com.yourpackage: INFO
          EOF

      - name: Run Checkstyle
        run: ./gradlew checkstyleMain checkstyleTest

      - name: Run Spotless
        run: ./gradlew spotlessCheck

      - name: Run Tests with CI profile
        run: ./gradlew test -Dspring.profiles.active=ci

      - name: Build Project with CI profile
        run: ./gradlew build -x test -Dspring.profiles.active=ci